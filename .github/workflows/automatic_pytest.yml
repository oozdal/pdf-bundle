# This workflow runs automatically every Sunday at 00:00 UTC and creates a conda cache for the week.
# In addition, it runs on every push and pull request to main. It skips update dependencies step if cache exists.

name: tests

on:
  push:
    tags:
      - '*'
    branches:
      - main
  pull_request:
    branches:
      - '*'
    types: [ closed, opened, synchronize, reopened ]
  
  #schedule:
  #  - cron: '0 0 * * 0' # Run every Sunday at 00:00
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  CACHE_NUMBER: 1  # increase to reset cache manually
  IMAGE_NAME: pdf-bundle

permissions: write-all

jobs:
  job1:

    # https://github.com/marketplace/actions/setup-miniconda#use-a-default-shell
    defaults:
      run:
        shell: bash -el {0}

    name: "Unit Testing"
    if: github.event_name == 'workflow_dispatch' || github.event_name == 'schedule' || github.event_name == 'push' || ( github.event_name == 'pull_request' && github.event.pull_request.head.ref != 'main' )
    runs-on: ubuntu-22.04
    timeout-minutes: 30 # increasing timeout
    steps:
        - uses: actions/checkout@v2
              
        - name: Set cache date
          id: date
          run: echo "::set-output name=date::$(date +'%Y-WeekNo%U')"
    
        - uses: actions/cache@v2
          with:
            path: /usr/share/miniconda3/envs/pdfbundle
            key: conda-${{ hashFiles('pytest_environment.yml') }}-${{ steps.date.outputs.date }}-${{ env.CACHE_NUMBER }}
          id: cache

        # See: https://github.com/marketplace/actions/setup-miniconda
        - name: Setup miniconda
          uses: conda-incubator/setup-miniconda@v2.2.0
          with:
            auto-update-conda: true
            miniforge-variant: Mambaforge
            channels: conda-forge
            python-version: 3.10.10
            activate-environment: pdfbundle
            environment-file: requirements.txt
            use-mamba: true
            use-only-tar-bz2: false
                   
        - name: Update Dependencies
          run: mamba env update -n pdfbundle -f requirements.txt
          if: steps.cache.outputs.cache-hit != 'true'

        - name: Activate pdfbundle
          run: |
            conda activate pdfbundle
            python -m ipykernel install --user --name pdfbundle
            python -m pip install .
            python setup.py install
      
        # Caching pytest to select automatically and execute only tests affected by recent changes!
        - uses: actions/cache@v2
          with:
            path: .testmondata
            key: testmon=${{ steps.date.outputs.date }}-${{ env.CACHE_NUMBER }}
                 
        - name: Test with pytest
          shell: bash -el {0}
          run: |
            pytest --testmon-forceselect


